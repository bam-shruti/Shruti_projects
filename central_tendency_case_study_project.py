# -*- coding: utf-8 -*-
"""Central Tendency Case Study Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fqWl9HcMUlvdhn2nWrKPqGmVA-_O5moG

###**Central Tendency Case Study**

###**Task 1**:
Load and study the Data
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import files
data = files.upload()

df = pd.read_csv('Wine Quality Dataset.csv')

df.head()

#Get the dimensions of the Dataframe
df.shape

#Get the row names of the dataframe
df.index

#Get the column names of the dataframe
df.columns

#Look ata the basic info about the dataframe
df.info()

"""**observation from task 1** :There are 4898 rows and 12 columns. Each row contains the details of the types of acids present in white_wine and the quality

The feature: different acids and their quality
"""



"""###**Task 2**:
View the distribution of the various features in the data set and calculate their central tendencies
"""

#Create a histogram of the fixed acidity feature
plt.figure(figsize =(11,6))

sns.histplot(data = df, x ='fixed acidity', color = 'orange',
             edgecolor = 'linen', alpha = 0.5, bins = 5)

plt.title("Histogram of fixed acidity")
plt.xlabel("Fixed Acidity")
plt.ylabel("Count")
plt.show()

"""**Observations** : 1)the histogram is normally distributed,

2)the max count of values for fixed acidity lies between 6 to 8
"""



#calculate the median of fixed acidity

df['fixed acidity'].median()

#creating a histogram of the fixed acidity feature and also showing the mean and the median

 plt.figure(figsize =(11,6))

 sns.histplot(data = df, x ='fixed acidity', color = 'orange',
              edgecolor = 'linen', alpha = 0.5, bins = 5)

 plt.title('Histogram of Fixed Acidity')
 plt.xlabel('Fixed Acidity')
 plt.ylabel('Count')
 plt.vlines(df['fixed acidity'].mean(), ymin = 0, ymax = 4000, colors = 'blue', label = 'Mean')
 plt.vlines(df['fixed acidity'].median(), ymin = 0, ymax = 4000, colors = 'red', label = 'Median')
 plt.legend()
 plt.show()

"""**Observations**: 1) We can see that mean ad median are clear representative of the data

2) Mean and median are very close to each other

3)we can choose either of the parameters say mean as the measure of central tendency
"""



#create a histogram of the ' Volatile acidity'

plt.figure(figsize =(11,6))

sns.histplot(data = df, x ='volatile acidity', color = 'green',
             edgecolor = 'linen', alpha = 0.5, bins = 5)

plt.title("Histogram of volatile acidity")
plt.xlabel("Volatile Acidity")
plt.ylabel("Count")
plt.show()

"""**Observations**: 1) We observe that this histogram is not well distributed, it is skewed a little towards the right.

2)As we have seen skewness, therefore we can check the distribution using distplot function


"""



#Plot distplot using 'Volatile acidity feature

plt.figure(figsize =(11,6))

sns.distplot(df['volatile acidity'], color = 'blue')

plt.title("Distplot of volatile acidity")
plt.xlabel("Volatile Acidity")
plt.ylabel("Count")
plt.show()

"""**Observation**: The above plot shows the normal distribution.

The normal distribution is described by the mean and the standard deviation.

The normal distribution is often referred to as a 'bell curve' because of its shape:



*   The median and the mean are equal
*   It has only one mode
*   It is symmetric, meaning it decreases the same amount of the left and the right of the centre


We can calculate skewness too using skew() function in python.
"""

#Calculate the skewness of 'Volatile Acidity'

round(df['volatile acidity'].skew(),2)

"""**Observation**: We can clearly see the skewness value is greater that 1, hence it is positively skewed."""

#Calculate the mean 'Volatile Acidity'

round(df['volatile acidity'].mean(),2)

#Calculate the median 'Volatile Acidity'

round(df['volatile acidity'].median(),2)

#Create a histogram of the 'Volatile Acidity' feature and also show the mean and the mediam

plt.figure(figsize =(11,6))

sns.histplot(data = df, x ='volatile acidity', color = 'green',
             edgecolor = 'linen', alpha = 0.5, bins = 5)

plt.title("Histogram of volatile acidity")
plt.xlabel("Volatile Acidity")
plt.ylabel("Density")
plt.vlines(df['volatile acidity'].mean(), ymin = 0, ymax = 4000, colors = 'blue', label= 'Mean')
plt.vlines(df['volatile acidity'].median(), ymin = 0, ymax = 4000, colors = 'red', label = 'Median')
plt.legend()
plt.show()

"""**Observations**: 1) The mean and the median are close to each other and the difference between them is very small.

2) We can safely choose the mean as the measure of the central tendency here.
"""

#Create Histogram of the 'Citric acid'

plt.figure(figsize =(11,6))

sns.histplot(data = df, x = 'citric acid', color = 'red',
             edgecolor = 'linen', alpha = 0.5, bins = 5)

plt.title("Histogram of citric acid")
plt.xlabel("Citric acid")
plt.ylabel("Count")
plt.show()

"""**Observations**: We observe that this histogram is not well distibuted, it is skewed a little toward the right"""

#Calculate the mean 'Citric Acid'
round(df['citric acid'].mean(),2)

#Calculate the median 'Citric Acid'
round(df['citric acid'].median(),2)

#Create a histogram of the 'citric acid' feature and also show the mean and the median

plt.figure(figsize =(11,6))

sns.histplot(data = df, x ='citric acid', color = 'red',
             edgecolor = 'linen', alpha = 0.5, bins = 5)

plt.title("Histogram of citric acid")
plt.xlabel("Citric acid")
plt.ylabel("Count")
plt.vlines(df['citric acid'].mean(), ymin = 0, ymax = 4000, colors = 'blue', label= 'Mean')
plt.vlines(df['citric acid'].median(), ymin = 0, ymax = 4000, colors = 'red', label = 'Median')
plt.legend()
plt.show()

"""**Observations**: 1) The mean and the median are close to each other and the difference between them is very small.

2) We can safely choose the mean as the measure of the central tendency here
"""

#Calculate distplot using 'Citric Acid' feature

plt.figure(figsize=(11,6))

sns.distplot(df['citric acid'], color = 'blue')

plt.title("Distplot of citric acid")
plt.xlabel("Citric acid")
plt.ylabel("Density")
plt.show()

"""Same procedure we can foloow for other numerical columns to get the mean, median(parameters of central tendency)"""

#Create a count plot of the 'Quality'

plt.figure(figsize=(11,6))

sns.countplot(data = df, x = 'quality', color = 'blue', alpha = 0.5)

plt.title("Count Plot of Quality")
plt.xlabel("Quality")
plt.ylabel("Count")
plt.show()

"""**Observations**: Its quite clear from the count plot that the 6 is the highest count of quality, whereas 9 is negligible"""

#Count the number of occurences of different categories of the 'quality'

df['quality'].value_counts()

#Calculate the mode of the 'quality'

df['quality'].mode()

df['quality'].value_counts().index[0]

"""**Observations from task 2**:


*   We saw the distributions of the various features in the data set using appropriate plots
*   We calculated central tendency measures like mean, median and mode for tghe various features.
*   The mean and the median for all the above features were similar, so we can choose the mean in these cases
*   The mode of the 'Quality' feature can be chosen as a representative value

###**Task 3**:
create a new Pandas series that contains the details of the acid types for a quality
"""

#create a new pandas series called 'rep_acid' that contains the details ofthe representative quality for the different types of acids

rep_acid = pd.Series(index=['fixed acidity', 'volatile acidity', 'citric acid','quality'],
                     data =[df['fixed acidity'].mean(), df['volatile acidity'].mean(),
                            df['citric acid'].mean(), df['quality'].value_counts().index[0]])

rep_acid

"""**Observations From task 3**:


*   The representative acid for the quality is as follows:
*   The mean value of the fixed acidity would be 6.854.
*   The mean value of the volatile acidity would be 0.2782
*   The mean value of the citric acid would be 0.3341
*   The quality would be 6

###**Final Conclusion**:


*   From the given dat, we can use simple visualisation to get a sense of how data are distributed
*   We can use various measures of central tendency such as mean, median and mode to represent a group of observations
*   The type of central tendency measure to use depends on the type and the distribution of the data
"""









