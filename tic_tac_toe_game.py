# -*- coding: utf-8 -*-
"""tic-tac-toe_game

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AwaMD_rGHE6MKNeS4LhVSRDirN_r5n0E
"""

import random

board=["-", "-", "-",
       "-", "-", "-",
       "-", "-", "-"]
currentPlayer = "X"
winner = None
gameRunning = True

#printing the game board

def printBoard(board):
  print(board[0] + " | " + board[1] + " | " + board[2])
  print("----------")
  print(board[3] + " | " + board[4] + " | " + board[5])
  print("----------")
  print(board[6] + " | " + board[7] + " | " + board[8])

# take the player input

def playerInput(board):
  inp = int(input("enter a number 1-9:"))
  if inp >= 1 and inp <= 9 and board[inp-1] == "-":
    board[inp-1] = currentPlayer
  else:
    print("player is in that spot already")

# check for win or tie

def checkHorizontle(board):
  global winner
  if board[1] == board[2] == board[3] and board[1] != "-":
    winner = board[0]
    return True
  elif board[3] == board[4] == board[5] and board[3] != "-":
    winner = board[3]
    return True
  elif board[6] == board[7] == board[8] and board[6] != "-":
    winner = board[6]
    return True

def checkRows(board):
       global winner
       if board[0] == board[3] == board[6] and board[0] != "-":
              winner = board[0]
              return True
       elif board[1] == board[4] == board[7] and board[1] != "-":
              winner = board[1]
              return True
       elif board[2] == board[5] == board[8] and board[2] != "-":
              winner = board(2)
              return True

def checkDiagonal(board):
       global winner
       if board[0] == board[4] == board[8] and board[0] != "-":
              winner = board[0]
              return True
       elif board[2] == board[4] == board[6] and board[2] != "-":
              winner = board[2]
              return True

def checkTie(board):
       global gameRunning
       if "-" not in board:
              printBoard(board)
              print("It is a tie!")
              gameRunning = False

def checkWin():
       if checkDiagonal(board) or checkRows(board) or checkHorizontle(board):
              print(f"The winner is {winner}")

# switch the player

def switchPlayer(board):
       global currentPlayer
       if currentPlayer == "X":
          currentPlayer = "O"
       else:
              currentPlayer = "X"

# computer

def computer(board):
       while currentPlayer == "O":
              position = random.randint (0,8)
              if board[position] == "-":
                 board[position] = "O"
                 switchPlayer(board)

# check for win or tie again

while gameRunning:
     printBoard(board)
     playerInput(board)
     checkWin()
     checkTie(board)
     switchPlayer(board)
     computer(board)
     checkWin()
     checkTie(board)



